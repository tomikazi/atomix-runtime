/*
Copyright 2022-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.primitive.v1;

import "google/protobuf/descriptor.proto";

extend google.protobuf.ServiceOptions {
    string primitive_type = 50000;
    bool partitioned = 50001;
}

extend google.protobuf.MethodOptions {
    PartitionStrategy partition_strategy = 71000;
}

extend google.protobuf.FieldOptions {
    bool partition_key = 72000;
    bool partition_range = 72001;
}

// PartitionStrategy is an enum for indicating the strategy used to partition a primitive
enum PartitionStrategy {
    NONE = 0;
    HASH = 1;
    RANGE = 2;
    RANDOM = 3;
    ROUND_ROBIN = 4;
}

extend google.protobuf.MethodOptions {
    string operation_name = 61000;
    OperationType operation_type = 61001;
    bool operation_async = 61002;
    uint32 operation_id = 61003;
}

extend google.protobuf.FieldOptions {
    AggregateStrategy operation_aggregate = 62001;
}

// OperationType is an enum for specifying the type of operation
enum OperationType {
    COMMAND = 0;
    QUERY = 1;
    CREATE = 2;
    CLOSE = 3;
}

// AggregateStrategy is an enum for indicating the strategy used to aggregate a field
enum AggregateStrategy {
    CHOOSE_FIRST = 0;
    APPEND = 1;
    SUM = 2;
}
