/*
Copyright 2022-present Open Networking Foundation.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";

package atomix.runtime.v1;

import "gogoproto/gogo.proto";

import "atomix/runtime/v1/common.proto";

// The controller service provides control functions for the runtime.
service Controller {
    rpc CreatePrimitive(CreatePrimitiveRequest) returns (CreatePrimitiveResponse);
    rpc GetPrimitive(GetPrimitiveRequest) returns (GetPrimitiveResponse);
    rpc DeletePrimitive(DeletePrimitiveRequest) returns (DeletePrimitiveResponse);
    rpc GetStore(GetStoreRequest) returns (GetStoreResponse);
}

message CreatePrimitiveRequest {
    Primitive primitive = 1;
}

message CreatePrimitiveResponse {

}

message GetPrimitiveRequest {
    string primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.casttype) = "PrimitiveID"
    ];
}

message GetPrimitiveResponse {
    Primitive primitive = 1;
}

message DeletePrimitiveRequest {
    string primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.casttype) = "PrimitiveID"
    ];
}

message DeletePrimitiveResponse {

}

message GetStoreRequest {
    string store_id = 1 [
        (gogoproto.customname) = "StoreID",
        (gogoproto.casttype) = "StoreID"
    ];
}

message GetStoreResponse {
    Store store = 1;
}
